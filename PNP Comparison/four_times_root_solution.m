close all
clear
addpath 'D:\计算机视觉测量\张志龙老师合作\EPnP_matlab\data';
% clc;
% clear all;
%此处将张志龙老师的仿真数据利用Long Quan的线性方法进行求解，看两者之间的误差
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
cFileName = 'D:\计算机视觉测量\张志龙老师合作\N点位姿数据 2013-09-13\Pose_PointPattern1.dat';
%Pose_PointPattern1.dat
%Pose_PointPattern2.dat
%Pose_PointPattern3.dat
%Pose_PointPattern4.dat
%Pose_PointPattern5.dat
fid = fopen(cFileName,'r');
[Alfa, nCount] = fread(fid,1,'double');
[Beta, nCount] = fread(fid,1,'double');
[Gama, nCount] = fread(fid,1,'double');
[RR,   nCount] = fread(fid,[3,3],'double');  
[tt,   nCount] = fread(fid, 3,'double');
[num,  nCount] = fread(fid, 1,'int');
[DA,   nCount] = fread(fid,[5,num],'double'); 
fclose(fid);
RR = RR';
DA = DA';
num_point=3;
R=return_Rt_matrix(Alfa,Beta,Gama,tt(1),tt(2),tt(3));
% R=return_Rt_matrix(alpha,beta,gamma,tx,ty,tz);
xworld=400*rand(1,num_point)-200;
yworld=400*rand(1,num_point)-200;
zworld=400*rand(1,num_point)-200;
point_world_coordinate=[xworld;yworld;zworld];
point_world_coordinate_h=[point_world_coordinate;ones(1,num_point)];
point_camera_coordinate=zeros(4,num_point);
point_image=zeros(2,num_point);
point_image_h=zeros(3,num_point);
for point_index=1:num_point%将世界坐标系转化为摄像机坐标系下的坐标以及图像坐标
    point_camera_coordinate(:,point_index)=R*point_world_coordinate_h(:,point_index);
    point_image(:,point_index)=point_camera_coordinate(1:2,point_index)/point_camera_coordinate(3,point_index);
    point_image_h(1:2,point_index)=point_image(:,point_index);
    point_image_h(3,point_index)=1;
end
d12=norm([xworld(1)-xworld(2),yworld(1)-yworld(2),zworld(1)-zworld(2)]);
d23=norm([xworld(2)-xworld(3),yworld(2)-yworld(3),zworld(2)-zworld(3)]);
d13=norm([xworld(1)-xworld(3),yworld(1)-yworld(3),zworld(1)-zworld(3)]);
d121=norm(point_camera_coordinate(1:3,1)-point_camera_coordinate(1:3,2));
d231=norm(point_camera_coordinate(1:3,2)-point_camera_coordinate(1:3,3));
d131=norm(point_camera_coordinate(1:3,1)-point_camera_coordinate(1:3,3));
theta12=acos(sum(point_image_h(:,1).*point_image_h(:,2))/norm(point_image_h(:,1))/norm(point_image_h(:,2)));
theta13=acos(sum(point_image_h(:,1).*point_image_h(:,3))/norm(point_image_h(:,1))/norm(point_image_h(:,3)));
theta23=acos(sum(point_image_h(:,2).*point_image_h(:,3))/norm(point_image_h(:,2))/norm(point_image_h(:,3)));

aa8= 16*cos(theta12)^4 - 64*cos(theta12)^3*cos(theta13)*cos(theta23) + 64*cos(theta12)^2*cos(theta13)^2*cos(theta23)^2 +...
    32*cos(theta12)^2*cos(theta13)^2+ 32*cos(theta12)^2*cos(theta23)^2 - 32*cos(theta12)^2 - 64*cos(theta12)*cos(theta13)^3*cos(theta23)- ...
    64*cos(theta12)*cos(theta13)*cos(theta23)^3 + 64*cos(theta12)*cos(theta13)*cos(theta23) + 16*cos(theta13)^4 + 32*cos(theta13)^2*cos(theta23)^2 -...
    32*cos(theta13)^2 + 16*cos(theta23)^4 - 32*cos(theta23)^2 + 16

aa6= - 64*d23^2*cos(theta12)^4*cos(theta13)^2 + 32*d23^2*cos(theta12)^4 + 128*d23^2*cos(theta12)^3*cos(theta13)^3*cos(theta23) - ...
    32*d23^2*cos(theta12)^3*cos(theta13)*cos(theta23) - 64*d23^2*cos(theta12)^2*cos(theta13)^4 - 128*d23^2*cos(theta12)^2*cos(theta13)^2*cos(theta23)^2 + ...
    128*d23^2*cos(theta12)^2*cos(theta13)^2 + 32*d23^2*cos(theta12)^2*cos(theta23)^2 - 64*d23^2*cos(theta12)^2 - 32*d23^2*cos(theta12)*cos(theta13)^3*cos(theta23) +...
    32*d23^2*cos(theta12)*cos(theta13)*cos(theta23)^3 + 32*d23^2*cos(theta12)*cos(theta13)*cos(theta23) + 32*d23^2*cos(theta13)^4+ ...
    32*d23^2*cos(theta13)^2*cos(theta23)^2 - 64*d23^2*cos(theta13)^2 - 32*d23^2*cos(theta23)^2 + 32*d23^2 - 32*d13^2*cos(theta12)^4 +...
    96*d13^2*cos(theta12)^3*cos(theta13)*cos(theta23) - 64*d13^2*cos(theta12)^2*cos(theta13)^2*cos(theta23)^2 - 32*d13^2*cos(theta12)^2*cos(theta13)^2 - ...
    64*d13^2*cos(theta12)^2*cos(theta23)^2 + 64*d13^2*cos(theta12)^2 + 32*d13^2*cos(theta12)*cos(theta13)^3*cos(theta23) +...
    96*d13^2*cos(theta12)*cos(theta13)*cos(theta23)^3 - 96*d13^2*cos(theta12)*cos(theta13)*cos(theta23) - 32*d13^2*cos(theta13)^2*cos(theta23)^2 + ...
    32*d13^2*cos(theta13)^2 - 32*d13^2*cos(theta23)^4 + 64*d13^2*cos(theta23)^2 - 32*d13^2  + 32*d12^2*cos(theta12)^3*cos(theta13)*cos(theta23) - ...
    64*d12^2*cos(theta12)^2*cos(theta13)^2*cos(theta23)^2 - 32*d12^2*cos(theta12)^2*cos(theta13)^2 - 32*d12^2*cos(theta12)^2*cos(theta23)^2+...
    32*d12^2*cos(theta12)^2 + 96*d12^2*cos(theta12)*cos(theta13)^3*cos(theta23) + 96*d12^2*cos(theta12)*cos(theta13)*cos(theta23)^3 - ...
    96*d12^2*cos(theta12)*cos(theta13)*cos(theta23) - 32*d12^2*cos(theta13)^4 - 64*d12^2*cos(theta13)^2*cos(theta23)^2+ 64*d12^2*cos(theta13)^2 -...
    32*d12^2*cos(theta23)^4 + 64*d12^2*cos(theta23)^2 - 32*d12^2 

aa4= 16*d23^4*cos(theta12)^4 - 32*d23^4*cos(theta12)^3*cos(theta13)*cos(theta23) + 48*d23^4*cos(theta12)^2*cos(theta13)^2 + ...
    16*d23^4*cos(theta12)^2*cos(theta23)^2 - 40*d23^4*cos(theta12)^2 - 32*d23^4*cos(theta12)*cos(theta13)^3*cos(theta23) + ...
    16*d23^4*cos(theta12)*cos(theta13)*cos(theta23) + 16*d23^4*cos(theta13)^4 + 16*d23^4*cos(theta13)^2*cos(theta23)^2 - ...
    40*d23^4*cos(theta13)^2 - 8*d23^4*cos(theta23)^2 + 24*d23^4 - 32*d13^2*d23^2*cos(theta12)^4 + ...
    64*d13^2*d23^2*cos(theta12)^3*cos(theta13)*cos(theta23)+ 64*d13^2*d23^2*cos(theta12)^2*cos(theta13)^2*cos(theta23)^2 - ...
    64*d13^2*d23^2*cos(theta12)^2*cos(theta13)^2 - 64*d13^2*d23^2*cos(theta12)^2*cos(theta23)^2 + 80*d13^2*d23^2*cos(theta12)^2 -...
    32*d13^2*d23^2*cos(theta12)*cos(theta13)^3*cos(theta23) - 32*d13^2*d23^2*cos(theta12)*cos(theta13)*cos(theta23)^3 - ...
    32*d13^2*d23^2*cos(theta12)*cos(theta13)*cos(theta23) + 48*d13^2*d23^2*cos(theta13)^2 + 48*d13^2*d23^2*cos(theta23)^2 - ...
    48*d13^2*d23^2 + 16*d13^4*cos(theta12)^4- 32*d13^4*cos(theta12)^3*cos(theta13)*cos(theta23) + 16*d13^4*cos(theta12)^2*cos(theta13)^2 + ...
    48*d13^4*cos(theta12)^2*cos(theta23)^2 - 40*d13^4*cos(theta12)^2 - 32*d13^4*cos(theta12)*cos(theta13)*cos(theta23)^3 + ...
    16*d13^4*cos(theta12)*cos(theta13)*cos(theta23) + 16*d13^4*cos(theta13)^2*cos(theta23)^2 - 8*d13^4*cos(theta13)^2+ 16*d13^4*cos(theta23)^4 - ...
    40*d13^4*cos(theta23)^2 + 24*d13^4  - 32*d12^2*d23^2*cos(theta12)^3*cos(theta13)*cos(theta23) + 64*d12^2*d23^2*cos(theta12)^2*cos(theta13)^2*cos(theta23)^2 -...
    64*d12^2*d23^2*cos(theta12)^2*cos(theta13)^2 + 48*d12^2*d23^2*cos(theta12)^2+ 64*d12^2*d23^2*cos(theta12)*cos(theta13)^3*cos(theta23) - ...
    32*d12^2*d23^2*cos(theta12)*cos(theta13)*cos(theta23)^3 - 32*d12^2*d23^2*cos(theta12)*cos(theta13)*cos(theta23) - 32*d12^2*d23^2*cos(theta13)^4 -...
    64*d12^2*d23^2*cos(theta13)^2*cos(theta23)^2+ 80*d12^2*d23^2*cos(theta13)^2 + 48*d12^2*d23^2*cos(theta23)^2 -...
    48*d12^2*d23^2 - 32*d12^2*d13^2*cos(theta12)^3*cos(theta13)*cos(theta23) + 64*d12^2*d13^2*cos(theta12)^2*cos(theta13)^2*cos(theta23)^2 + ...
    32*d12^2*d13^2*cos(theta12)^2*cos(theta23)^2 - 48*d12^2*d13^2*cos(theta12)^2 - 32*d12^2*d13^2*cos(theta12)*cos(theta13)^3*cos(theta23) - ...
    128*d12^2*d13^2*cos(theta12)*cos(theta13)*cos(theta23)^3+ 160*d12^2*d13^2*cos(theta12)*cos(theta13)*cos(theta23) + ...
    32*d12^2*d13^2*cos(theta13)^2*cos(theta23)^2 - 48*d12^2*d13^2*cos(theta13)^2 + 64*d12^2*d13^2*cos(theta23)^4 - 112*d12^2*d13^2*cos(theta23)^2 +...
    48*d12^2*d13^2 + 16*d12^4*cos(theta12)^2*cos(theta13)^2 + 16*d12^4*cos(theta12)^2*cos(theta23)^2 - 8*d12^4*cos(theta12)^2 - ...
    32*d12^4*cos(theta12)*cos(theta13)^3*cos(theta23) - 32*d12^4*cos(theta12)*cos(theta13)*cos(theta23)^3 + 16*d12^4*cos(theta12)*cos(theta13)*cos(theta23) +...
    16*d12^4*cos(theta13)^4 + 48*d12^4*cos(theta13)^2*cos(theta23)^2 - 40*d12^4*cos(theta13)^2 + 16*d12^4*cos(theta23)^4 - 40*d12^4*cos(theta23)^2 + 24*d12^4;

aa2=- 8*d23^6*cos(theta12)^2 + 8*d23^6*cos(theta12)*cos(theta13)*cos(theta23) - 8*d23^6*cos(theta13)^2 + 8*d23^6  - ...
    16*d13^2*d23^4*cos(theta12)^2*cos(theta23)^2 + 24*d13^2*d23^4*cos(theta12)^2 - 8*d13^2*d23^4*cos(theta12)*cos(theta13)*cos(theta23) +...
    16*d13^2*d23^4*cos(theta13)^2+ 8*d13^2*d23^4*cos(theta23)^2 - 24*d13^2*d23^4 - 16*d13^6*cos(theta12)^2*cos(theta23)^2 + ...
    8*d13^6*cos(theta12)^2 + 8*d13^6*cos(theta12)*cos(theta13)*cos(theta23) + 8*d13^6*cos(theta23)^2 - 8*d13^6  + ...
    32*d13^4*d23^2*cos(theta12)^2*cos(theta23)^2 - 24*d13^4*d23^2*cos(theta12)^2 - 8*d13^4*d23^2*cos(theta12)*cos(theta13)*cos(theta23) - ...
    8*d13^4*d23^2*cos(theta13)^2 - 16*d13^4*d23^2*cos(theta23)^2 + 24*d13^4*d23^2+ 16*d12^2*d23^4*cos(theta12)^2 - ...
    8*d12^2*d23^4*cos(theta12)*cos(theta13)*cos(theta23) - 16*d12^2*d23^4*cos(theta13)^2*cos(theta23)^2 + 24*d12^2*d23^4*cos(theta13)^2 +...
    8*d12^2*d23^4*cos(theta23)^2 - 24*d12^2*d23^4+ 16*d12^2*d13^4*cos(theta12)^2+ 32*d12^2*d13^4*cos(theta12)*cos(theta13)*cos(theta23)^3 - ...
    40*d12^2*d13^4*cos(theta12)*cos(theta13)*cos(theta23) - 16*d12^2*d13^4*cos(theta13)^2*cos(theta23)^2 + 8*d12^2*d13^4*cos(theta13)^2 -...
    32*d12^2*d13^4*cos(theta23)^4 + 56*d12^2*d13^4*cos(theta23)^2 - 24*d12^2*d13^4  - 32*d12^2*d13^2*d23^2*cos(theta12)^2 + ...
    32*d12^2*d13^2*d23^2*cos(theta12)*cos(theta13)*cos(theta23)^3 + 48*d12^2*d13^2*d23^2*cos(theta12)*cos(theta13)*cos(theta23) - ...
    32*d12^2*d13^2*d23^2*cos(theta13)^2- 64*d12^2*d13^2*d23^2*cos(theta23)^2 + 48*d12^2*d13^2*d23^2 - 16*d12^4*d13^2*cos(theta12)^2*cos(theta23)^2 +...
    8*d12^4*d13^2*cos(theta12)^2 + 32*d12^4*d13^2*cos(theta12)*cos(theta13)*cos(theta23)^3 - 40*d12^4*d13^2*cos(theta12)*cos(theta13)*cos(theta23) + ...
    16*d12^4*d13^2*cos(theta13)^2 - 32*d12^4*d13^2*cos(theta23)^4 + 56*d12^4*d13^2*cos(theta23)^2 - 24*d12^4*d13^2 - 8*d12^4*d23^2*cos(theta12)^2 - ...
    8*d12^4*d23^2*cos(theta12)*cos(theta13)*cos(theta23) + 32*d12^4*d23^2*cos(theta13)^2*cos(theta23)^2 - 24*d12^4*d23^2*cos(theta13)^2 - ...
    16*d12^4*d23^2*cos(theta23)^2+ 24*d12^4*d23^2+ 8*d12^6*cos(theta12)*cos(theta13)*cos(theta23) - 16*d12^6*cos(theta13)^2*cos(theta23)^2 +...
    8*d12^6*cos(theta13)^2 + 8*d12^6*cos(theta23)^2 - 8*d12^6 ;


aa0=d12^8 - 8*d12^6*d13^2*cos(theta23)^2 + 4*d12^6*d13^2 - 4*d12^6*d23^2 + 16*d12^4*d13^4*cos(theta23)^4 - 16*d12^4*d13^4*cos(theta23)^2 +...
    6*d12^4*d13^4 + 16*d12^4*d13^2*d23^2*cos(theta23)^2 - 12*d12^4*d13^2*d23^2  - 8*d12^2*d13^6*cos(theta23)^2+ 4*d12^2*d13^6 + ...
    16*d12^2*d13^4*d23^2*cos(theta23)^2 - 12*d12^2*d13^4*d23^2 - 4*d12^2*d23^6 + d13^8 - 4*d13^6*d23^2 - 4*d13^2*d23^6+ d23^8 + ...
    6*d13^4*d23^4- 8*d12^2*d13^2*d23^4*cos(theta23)^2 + 12*d12^2*d13^2*d23^4+ 6*d12^4*d23^4 ;
coefficient_class8=[aa8,aa6,aa4,aa2,aa0];
solution=roots(coefficient_class8);
distance=[];
% x1^2+x2^2-2*x1*x2*cos(theta12)-d12^2=0
% x1^2+x3^2-2*x1*x3*cos(theta13)-d13^2=0
% x2^2+x3^2-2*x2*x3*cos(theta23)-d23^2=0
solution_for_1=zeros(1,4);
solution_for_2=zeros(1,4);
solution_for_3=zeros(1,4);
for solution_index=1:4
    if isreal(solution(solution_index))
        if solution(solution_index)>0
            solution_for_1(solution_index)=sqrt(solution(solution_index));
            coefficient_for_2=[1,-2*solution_for_1(solution_index)*cos(theta12),solution_for_1(solution_index)^2-d12^2];
            solution_for2=roots(coefficient_for_2);
            residual_2=zeros(1,2);
            residual_3=zeros(1,2);
            for index_distance2=1:2
                x1=solution_for_1(solution_index);
                a4= 1;
                a3=- 4*x1*cos(theta13)*cos(theta23);
                a2=- 4*d13^2*cos(theta23)^2 + 2*d13^2 - 2*d23^2+ 4*x1^2*cos(theta13)^2 + 4*x1^2*cos(theta23)^2 - 2*x1^2 ;
                a1= - 4*x1^3*cos(theta13)*cos(theta23)+ 4*d23^2*x1*cos(theta13)*cos(theta23)+ 4*d13^2*x1*cos(theta13)*cos(theta23);
                a0=d13^4 - 2*d13^2*d23^2 - 2*d13^2*x1^2  + d23^4- 4*d23^2*x1^2*cos(theta13)^2 + 2*d23^2*x1^2  + x1^4;
                residual_2(index_distance2)=a4*solution_for2(index_distance2)^4+a3*solution_for2(index_distance2)^3+a2*solution_for2(index_distance2)^2+a1*solution_for2(index_distance2)+a0;
            end
            if abs(residual_2(1))<abs(residual_2(2))
                solution_for_2(solution_index)=solution_for2(1);
                residual2=residual_2(1);
            else
                solution_for_2(solution_index)=solution_for2(2);
                residual2=residual_2(2);
            end
            coefficient_for_3=[1,-2*solution_for_1(solution_index)*cos(theta13),solution_for_1(solution_index)^2-d13^2];
            solution_for3=roots(coefficient_for_3);
            for index_distance3=1:2
                residual_3(index_distance3)=solution_for_2(solution_index)^2+solution_for3(index_distance3)^2-...
                    2*solution_for_2(solution_index)*solution_for3(index_distance3)*cos(theta23)-d23^2;
            end
            if abs(residual_3(1))<abs(residual_3(2))
                solution_for_3(solution_index)=solution_for3(1);
                residual3=abs(residual_3(1));
            else
                solution_for_3(solution_index)=solution_for3(2);
                residual3=abs(residual_3(2));
            end
%             solution_for3=roots(coefficient_for_3);
            residual_total(solution_index)=residual2+residual3;
        end
    end
end

% solution1=-aa6/(4*aa8)-...%第一项
%     0.5*sqrt((aa6^2/(4*aa8^2)-2*aa4/(3*aa8)+...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)))+...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8))-...%第二项
%    1/2*sqrt(aa6^2/(2*aa8^2)-4*aa4/(3*aa8)-...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3))-...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8)-(-aa6^3/aa8^3+4*aa4*aa6/aa8^2-8*aa2*aa8)/(4*(sqrt(aa6^2/4/aa8^2-2*aa4/3/aa8+...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3))+...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8)))));%第三项
% 
% 
% solution2=-aa6/(4*aa8)-...%第一项
%     0.5*sqrt((aa6^2/4/aa8^2-2*aa4/3/aa8+...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)))+...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8))+...%第二项
%    1/2*sqrt(aa6^2/(2*aa8^2)-4*aa4/(3*aa8)-...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3))-...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8)-(-aa6^3/aa8^3+4*aa4*aa6/aa8^2-8*aa2*aa8)/(4*(sqrt(aa6^2/4/aa8^2-2*aa4/3/aa8+...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3))+...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8)))));%第三项
% 
% 
% solution3=-aa6/(4*aa8)+...%第一项
%     0.5*sqrt((aa6^2/4/aa8^2-2*aa4/3/aa8+...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)))+...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8))-...%第二项
%    1/2*sqrt(aa6^2/(2*aa8^2)-4*aa4/(3*aa8)-...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3))-...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8)+(-aa6^3/aa8^3+4*aa4*aa6/aa8^2-8*aa2*aa8)/(4*(sqrt(aa6^2/4/aa8^2-2*aa4/3/aa8+...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3))+...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8)))));%第三项
% 
% 
% solution4=-aa6/(4*aa8)+...%第一项
%     0.5*sqrt((aa6^2/4/aa8^2-2*aa4/3/aa8+...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)))+...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8))+...%第二项
%    1/2*sqrt(aa6^2/(2*aa8^2)-4*aa4/(3*aa8)-...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3))-...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8)+(-aa6^3/aa8^3+4*aa4*aa6/aa8^2-8*aa2*aa8)/(4*(sqrt(aa6^2/4/aa8^2-2*aa4/3/aa8+...
%     2^(1/3)*(aa4^2-3*aa2*aa6+12*aa0*aa8)/(3*aa8*(2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3))+...
%   (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8+sqrt(-4*(aa4^2-3*aa2*aa6+12*aa0*aa8).^3+...
%     (2*aa4^3-9*aa2*aa4*aa6+27*aa0*aa6^2+27*aa2^2*aa8-72*aa0*aa4*aa8)^2))^(1/3)/...
%    (3*2^(1/3)*aa8)))));%第三项
    
    













